/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.example;


import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

@SpringBootTest
@AutoConfigureMockMvc
public class AppTest {
    @Autowired
    private MockMvc mockMvc;

    @Test
    void testSayHello() throws Exception {
        mockMvc.perform(MockMvcRequestBuilders.get("/"))
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andExpect(MockMvcResultMatchers.content().string(org.hamcrest.Matchers.containsString("Welcome to MARS")));
    }

    @Test
    void testCpuLoad() throws Exception {
        mockMvc.perform(MockMvcRequestBuilders.get("/cpu-load?duration=1"))
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andExpect(MockMvcResultMatchers.content().string(org.hamcrest.Matchers.containsString("CPU load increased")));
    }

    @Test
    void testMemoryLoad() throws Exception {
        mockMvc.perform(MockMvcRequestBuilders.get("/memory-load?size=1"))
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andExpect(MockMvcResultMatchers.content().string(org.hamcrest.Matchers.containsString("Memory load increased")));
    }

    @Test
    void testResetMemory() throws Exception {
        mockMvc.perform(MockMvcRequestBuilders.get("/reset-memory"))
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andExpect(MockMvcResultMatchers.content().string(org.hamcrest.Matchers.containsString("Memory load reset")));
    }

    @Test
    void testSimulateObjectStore() throws Exception {
        mockMvc.perform(MockMvcRequestBuilders.get("/simulate-objectstore"))
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andExpect(MockMvcResultMatchers.content().string(org.hamcrest.Matchers.containsString("object store directory")));
    }
}
