/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.slf4j:slf4j-api:2.0.9'

    implementation 'io.opentelemetry:opentelemetry-api:1.28.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.28.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.28.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21) 
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

springBoot {
    buildImage {
        builder = "paketobuildpacks/builder-jammy-full:0.3.493"
        buildpacks = [
            "gcr.io/paketo-buildpacks/java"
        ]
        docker {
            publishRegistry {
                username = System.getenv('DOCKER_USERNAME')
                password = System.getenv('DOCKER_PASSWORD')
                url = System.getenv('DOCKER_REGISTRY_URL')
            }
        }
    }
}